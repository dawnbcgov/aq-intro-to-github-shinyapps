---
title: "Deploying to Shinyapps.io"
---

## Welcome & Key Concepts

**Learning Objective:**  Understand how to deploy a Shiny app using ShinyApps.io, practice deploying an app, making a change, and registering and adjusting permissions from the dashboard.


#### Shiny and Shiny applications (apps)

Shiny is an R package that allows you to quickly build interactive web apps with R. 

![Shiny app with number of bins slider on the left and histogram of frequency of waiting times on the right". Credit: Shiny.](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/images/01_hello.png){width=80%}

From the [Shiny docs](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/):

> Shiny apps are contained in a single script called `app.R`. The script `app.R` lives in a directory (for example, `newdir/`) and the app can be run with `runApp("newdir")`.
> `app.R` has three components:
> - a user interface (`ui`) object, that controls the layout and appearance of your app
> - a server function, that contains the instructions that your computer needs to build your app
> - a call to the shinyApp function, which creates Shiny app objects from an explicit UI/server pair

```
library(shiny)

# See above for the definitions of ui and server
ui <- ...

server <- ...

shinyApp(ui = ui, server = server)
```

::: callout-tip
## Places to learn more

-  Shiny: [Shiny Basics](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/)

:::


#### Shinyapps.io

shinyapps.io is a platform that allows you to quickly publish and share Shiny applications on the web. From their user guide:

> The service runs in the cloud on shared servers that are operated by Posit. Each application is self-contained and operates on either data that is uploaded with the application, or data that the code pulls from third-party data stores, such as databases or web services.

In the Province of BC we use Shinyapps.io to run many data-heavy applications in the public cloud, and we store the source code on GitHub. Here is one example:

> shinywqg is a Shiny application to run the â€™B.C. Ambient Water Quality Guidelines. Guidelines are determined based on information from the BC Data Catalogue.

Shiny App: [https://bcgov-env.shinyapps.io/bc_wqg/](https://bcgov-env.shinyapps.io/bc_wqg/)
GitHub Repo: [https://github.com/bcgov/shinywqg](https://github.com/bcgov/shinywqg)


::: callout-tip
## Places to learn more

- Shinyapps.io [User Guide](https://docs.posit.co/shinyapps.io/guide/)

:::


## Run a Shiny app locally

::: mark
#### **Activity**: Prepare your files, test, and run a Shiny app with RStudio
:::

To start, you will need to have the files for the ShinyApp ready on your local machine. We have an example ready on a branch called `shiny-app`, so you just need to clone the workshop repository and make sure it is up to date.

Once you have checked-out the `shiny-app` branch, open the project in RStudio and open the app folder and browse the files. See if you can run the Shiny app locally.

```{=html}
<div class="accordion">
  <div class="accordion-item">
    <h2 class="accordion-header" id="heading1">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse1" aria-expanded="false" aria-controls="collapse1">
        <strong>Detailed Steps</strong>
      </button>
    </h2>
    <div id="collapse1" class="accordion-collapse collapse" aria-labelledby="heading1" data-bs-parent="#accordionExample" style="">
      <div class="accordion-body">
        <ol>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ol>
      </div>
    </div>
  </div>
</div>
```


::: callout-note
## Resources used

-  Shiny: [Shiny Basics](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/)

:::



## Publish using shinyapps.io

::: mark
#### **Activity**: Publish your Shiny app using shinyapps.io
:::

Next, we are going to publish the app to our **personal** Shinyapps.io accounts. You then have to configure the `rsconnect` package on your local machine to publish to it by getting a token and secret from shinyaps.io which allows `rsconnect` to access your account. Then we will publish or "deploy" the app from RStudio.

```{=html}
<div class="accordion">
  <div class="accordion-item">
    <h2 class="accordion-header" id="heading2">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse2" aria-expanded="false" aria-controls="collapse2">
        <strong>Detailed Steps</strong>
      </button>
    </h2>
    <div id="collapse2" class="accordion-collapse collapse" aria-labelledby="heading2" data-bs-parent="#accordionExample" style="">
      <div class="accordion-body">
        <ol>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ol>
      </div>
    </div>
  </div>
</div>
```

That's it! You've published a Shiny app to Shinyapps.io!

::: callout-note
## Resources used

-  Shinyapps.io [Getting Started](https://docs.posit.co/shinyapps.io/guide/getting_started/)
:::

#### Advanced configuration options (Demo)

_Note: this activity requires a shinyapps.io pro account so we will just demo._

For our purposes we will want to restrict the Shiny app to only Meterologists, so we will make use of a feature from the Shinyapps.io pro version: Authentication, that we will demonstrate now.


## Update and publish cycle with Shinyapps.io

::: mark
#### **Activity**: Make a change and re-publish your Shiny app
:::

What happens if you need to make a change though? We have seen this with the Quarto website for this workshop series and our workshop last week with a Quarto site. By default, once we make a change it isn't automatically published. Let's cover manually re-publishing your ShinyApp first.

If you are still running the app locally, stop running it. Make a change (it can be something small) and then check to see that it runs locally. Look at the Shinyapps.io version: it hasn't updated there. We need to re-publish the app to see those changes.

```{=html}
<div class="accordion">
  <div class="accordion-item">
    <h2 class="accordion-header" id="heading3">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse3" aria-expanded="false" aria-controls="collapse3">
        <strong>Detailed Steps</strong>
      </button>
    </h2>
    <div id="collapse3" class="accordion-collapse collapse" aria-labelledby="heading3" data-bs-parent="#accordionExample" style="">
      <div class="accordion-body">
        <ol>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ol>
      </div>
    </div>
  </div>
</div>
```


::: callout-note
## Resources used

-  Shinyapps.io [Getting Started](https://docs.posit.co/shinyapps.io/guide/getting_started/)
:::
