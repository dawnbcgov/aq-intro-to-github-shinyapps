[
  {
    "objectID": "practice/pr_review_practice_file.html",
    "href": "practice/pr_review_practice_file.html",
    "title": "file_to_review",
    "section": "",
    "text": "Practice file to review\nThis is a word list from EFF for making random passphrases.\n\nacid\nacorn\nacre\nafar\naffix\naged\nagent\nagile\nagony\naide\naids\naim\najar\nalarm\nalias\nalibi\nalien\nalike\naloe\naloft\naloha\nalone\namend\namino\nample\namuse\nangel\nanger\nangle\nankle\napple\napril\napron\naqua\narea\narena\nargue\narise\narmed\narmor\narmy\naroma\narray\narson\nart\nashen\nashes\natlas\natom\nattic\naudio\navert\navoid\nawake\naward\nawoke\naxis\nbacon\nbadge\nbagel\nbaggy\nbaked\nbaker\nbalmy\nbanjo\nbarge\nbarn\nbash\nbasil\nbask\nbatch\nbath\nbaton\nbats\nblade\nblank\nblast\nblaze\nbleak\nblend\nbless\nblimp\nblink\nbloat\nblob\nblog\nblot\nblunt\nblurt\nblush\nboast\nboat\nbody\nboil\nbok\nbolt\nboned\nboney\nbonus\nbony\nbook\nbooth\nboots\nboss\nbotch\nboth\nboxer\nbreed\nbribe\nbrick\nbride\nbrim\nbring\nbrink\nbrisk\nbroad\nbroil\nbroke\nbrook\nbroom\nbrush\nbuck\nbud\nbuggy\nbulge\nbulk\nbully\nbunch\nbunny\nbunt\nbush\nbust\nbusy\nbuzz\ncable\ncache\ncadet\ncage\ncake\ncalm\ncameo\ncanal\ncandy\ncane\ncanon\ncape\ncard\ncargo\ncarol\ncarry\ncarve\ncase\ncash\ncause\ncedar\nchain\nchair\nchant\nchaos\ncharm\nchase\ncheek\ncheer\nchef\nchest\nchew\nchief\nchill\nchip\nchomp\nchop\nchow\nchuck\nchump\nchunk\nchurn\nchute\ncider\ncinch\ncity\ncivic\ncivil\nclad\nclaim\nclamp\nclap\nclash\nclasp\nclass\nclaw\nclay\nclean\nclear\ncleat\ncleft\nclerk\nclick\ncling\nclink\nclip\ncloak\nclock\nclone\ncloth\ncloud\nclump\ncoach\ncoast\ncoat\ncod\ncoil\ncoke\ncola\ncold\ncolt\ncoma\ncome\ncomic\ncomma\ncone\ncope\ncopy\ncoral\ncork\ncost\ncot\ncouch\ncough\ncover\ncozy\ncraft\ncramp\ncrane\ncrank\ncrate\ncrawl\ncrazy\ncreme\ncrepe\ncrept\ncried\ncrisp\ncrook\ncrop\ncross\ncrowd\ncrown\ncrumb\ncrush\ncrust\ncub\ncult\ncupid\ncure\ncurl\ncurry\ncurse\ncurve\ncurvy\ncushy\ncut\ncycle\ndab\ndad\ndaily\ndairy\ndaisy\ndance\ndandy\ndarn\ndart\ndash\ndata\ndate\ndawn\ndeaf\ndeal\ndean\ndebit\ndebt\ndebug\ndecaf\ndecal\ndecay\ndeck\ndecor\ndecoy\ndeed\ndelay\ndenim\ndense\ndent\ndepth\nderby\ndesk\ndial\ndiary\ndice\ndig\ndill\ndime\ndimly\ndiner\ndingy\ndisco\ndish\ndisk\nditch\nditzy\ndizzy\ndock\ndodge\ndoing\ndoll\ndome\ndonor\ndonut\ndose\ndot\ndove\ndown\ndowry\ndoze\ndrab\ndrama\ndrank\ndraw\ndress\ndried\ndrift\ndrill\ndrive\ndrone\ndroop\ndrown\ndrum\ndry\nduck\nduct\ndude\ndug\nduke\nduo\ndusk\ndust\nduty\ndwarf\ndwell\neagle\nearly\nearth\neasel\neast\neaten\neats\nebay\nebony\nebook\necho\nedge\neel\neject\nelbow\nelder\nelf\nelk\nelm\nelope\nelude\nelves\nemail\nemit\nempty\nemu\nenter\nentry\nenvoy\nequal\nerase\nerror\nerupt\nessay\netch\nevade\neven\nevict\nevil\nevoke\nexact\nexit\nfable\nfaced\nfact\nfade\nfall\nfalse\nfancy\nfang\nfax\nfeast\nfeed\nfemur\nfend\nferry\nfetal\nfetch\nfever\nfiber\nfifth\nfifty\nfilm\nfilth\nfinal\nfinch\nfit\nfive\nflag\nflaky\nflame\nflap\nflask\nfled\nflick\nfling\nflint\nflip\nflirt\nfloat\nflock\nflop\nfloss\nflyer\nfoam\nfoe\nfog\nfoil\nfolic\nfolk\nfood\nfool\nfound\nfox\nfoyer\nfrail\nframe\nfray\nfresh\nfried\nfrill\nfrisk\nfrom\nfront\nfrost\nfroth\nfrown\nfroze\nfruit\ngag\ngains\ngala\ngame\ngap\ngas\ngave\ngear\ngeek\ngem\ngenre\ngift\ngig\ngills\ngiven\ngiver\nglad\nglass\nglide\ngloss\nglove\nglow\nglue\ngoal\ngoing\ngolf\ngong\ngood\ngooey\ngoofy\ngore\ngown\ngrab\ngrain\ngrant\ngrape\ngraph\ngrasp\ngrass\ngrave\ngravy\ngray\ngreen\ngreet\ngrew\ngrid\ngrief\ngrill\ngrip\ngrit\ngroom\ngrowl\ngrub\ngrunt\nguide\ngulf\ngulp\ngummy\nguru\ngush\ngut\nguy\nhabit\nhalf\nhalo\nhalt\nhappy\nharm\nhash\nhasty\nhatch\nhate\nhaven\nhazel\nhazy\nheap\nheat\nheave\nhedge\nhefty\nhelp\nherbs\nhers\nhub\nhug\nhula\nhull\nhuman\nhumid\nhump\nhung\nhunk\nhunt\nhurry\nhurt\nhush\nhut\nice\nicing\nicon\nicy\nigloo\nimage\nion\niron\nislam\nissue\nitem\nivory\nivy\njab\njam\njaws\njazz\njeep\njelly\njet\njiffy\njob\njog\njolly\njolt\njot\njoy\njudge\njuice\njuicy\njuly\njumbo\njump\njunky\njuror\nkeep\nkeg\nkept\nkick\nkilt\nking\nkite\nkitty\nkiwi\nknee\nknelt\nkoala\nkung\nladle\nlady\nlair\nlake\nlance\nlapel\nlarge\nlash\nlasso\nlast\nlatch\nlate\nlazy\nleft\nlegal\nlemon\nlend\nlens\nlent\nlevel\nlever\nlid\nlife\nlift\nlilac\nlily\nlimb\nlimes\nline\nlint\nlion\nlip\nlived\nliver\nlunar\nlunch\nlung\nlurch\nlurk\nlying\nlyric\nmace\nmaker\nmalt\nmama\nmango\nmanor\nmany\nmap\nmarch\nmardi\nmash\nmatch\nmate\nmath\nmocha\nmold\nmom\nmoody\nmop\nmorse\nmost\nmotor\nmotto\nmount\nmouse\nmousy\nmouth\nmove\nmovie\nmower\nmud\nmug\nmulch\nmule\nmull\nmumbo\nmummy\nmural\nmuse\nmusic\nmusky\nmute\nnacho\nnag\nnail\nname\nnanny\nnap\nnavy\nnear\nneat\nneon\nnerd\nnest\nnet\nnext\nniece\nninth\nnutty\noak\noasis\noat\nocean\noil\nold\nolive\nomen\nonion\nonly\nooze\nopal\nopen\nopera\nopt\notter\nouch\nounce\nouter\noval\noven\nowl\nozone\npace\npagan\npager\npalm\npanda\npanic\npants\npanty\npaper\npark\nparty\npatch\npath\npatio\npayer\npecan\npenny\npep\nperch\nperky\nperm\npest\npetal\npetri\npetty\nphoto\nplank\nplant\nplaza\nplead\nplow\npluck\nplug\nplus\npoach\npod\npoem\npoet\npogo\npoint\npoise\npoker\npolar\npolio\npolka\npolo\npond\npony\npoppy\npork\nposer\npouch\npound\npout\npower\nprank\npress\nprint\nprior\nprism\nprize\nprobe\nprong\nproof\nprops\nprude\nprune\npry\npug\npull\npulp\npulse\npuma\npunch\npunk\npupil\npuppy\npurr\npurse\npush\nputt\nquack\nquake\nquery\nquiet\nquill\nquilt\nquit\nquota\nquote\nrabid\nrace\nrack\nradar\nradio\nraft\nrage\nraid\nrail\nrake\nrally\nramp\nranch\nrange\nrank\nrant\nrash\nreach\nreact\nream\nrebel\nrecap\nrelax\nrelay\nrelic\nremix\nrepay\nrepel\nreply\nrerun\nreset\nrhyme\nrice\nrich\nride\nrigid\nrigor\nrinse\nriot\nripen\nrise\nrisk\nritzy\nrival\nriver\nroast\nrobe\nrobin\nrock\nrogue\nroman\nromp\nrope\nrover\nroyal\nruby\nrug\nruin\nrule\nrunny\nrush\nrust\nrut\nsadly\nsage\nsaid\nsaint\nsalad\nsalon\nsalt\nsame\nsandy\nsanta\nsatin\nsauna\nsaved\nsavor\nsax\nsay\nscale\nscam\nscan\nscare\nscarf\nscary\nscoff\nscold\nscoop\nscoot\nscope\nscore\nscorn\nscout\nscowl\nscrap\nscrub\nscuba\nscuff\nsect\nsedan\nself\nsend\nsepia\nserve\nset\nseven\nshack\nshade\nshady\nshaft\nshaky\nsham\nshape\nshare\nsharp\nshed\nsheep\nsheet\nshelf\nshell\nshine\nshiny\nship\nshirt\nshock\nshop\nshore\nshout\nshove\nshown\nshowy\nshred\nshrug\nshun\nshush\nshut\nshy\nsift\nsilk\nsilly\nsilo\nsip\nsiren\nsixth\nsize\nskate\nskew\nskid\nskier\nskies\nskip\nskirt\nskit\nsky\nslab\nslack\nslain\nslam\nslang\nslash\nslate\nslaw\nsled\nsleek\nsleep\nsleet\nslept\nslice\nslick\nslimy\nsling\nslip\nslit\nslob\nslot\nslug\nslum\nslurp\nslush\nsmall\nsmash\nsmell\nsmile\nsmirk\nsmog\nsnack\nsnare\nsnarl\nsneak\nsneer\nsniff\nsnore\nsnout\nsnowy\nsnub\nsnuff\nspeak\nspeed\nspend\nspent\nspew\nspied\nspill\nspiny\nspoil\nspoke\nspoof\nspool\nspoon\nsport\nspot\nspout\nspray\nspree\nspur\nsquad\nsquat\nsquid\nstack\nstaff\nstage\nstain\nstall\nstamp\nstand\nstank\nstark\nstart\nstash\nstate\nstays\nsteam\nsteep\nstem\nstep\nstew\nstick\nsting\nstir\nstock\nstole\nstomp\nstony\nstood\nstool\nstoop\nstop\nstorm\nstout\nstove\nstraw\nstray\nstrut\nstuck\nstud\nstuff\nstump\nstung\nstunt\nsuds\nsugar\nsulk\nsurf\nsushi\nswab\nswan\nswarm\nswear\nsweat\nsweep\nswell\nswept\nswim\nswing\nswipe\nswirl\nswoop\nswore\nsyrup\ntacky\ntaco\ntag\ntake\ntall\ntalon\ntamer\ntank\ntaper\ntaps\ntarot\ntart\ntask\ntaste\ntasty\ntaunt\nthank\nthaw\ntheft\ntheme\nthigh\nthing\nthink\nthong\nthorn\nthose\nthrob\nthud\nthumb\nthump\nthus\ntiara\ntidal\ntidy\ntiger\ntile\ntilt\ntint\ntrace\ntrack\ntrade\ntrain\ntrait\ntrap\ntrash\ntray\ntreat\ntree\ntrek\ntrend\ntrial\ntribe\ntrick\ntrio\ntrout\ntruce\ntruck\ntrump\ntrunk\ntry\ntug\ntulip\ntummy\nturf\ntusk\ntutor\ntutu\ntux\ntweak\ntweet\ntwice\ntwine\ntwins\ntwirl\ntwist\nuncle\nuncut\nundo\nunify\nunion\nunit\nuntie\nupon\nupper\nurban\nused\nuser\nusher\nutter\nvalue\nvapor\nvegan\nvenue\nverse\nvest\nveto\nvice\nvideo\nview\nviral\nvirus\nvisa\nvisor\nvixen\nvocal\nvoice\nvoid\nvolt\nvoter\nvowel\nwad\nwafer\nwager\nwagon\nwake\nwalk\nwand\nwasp\nwatch\nwater\nwavy\nwheat\nwhiff\nwhole\nwhoop\nwick\nwiden\nwidow\nwidth\nwife\nwifi\nwilt\nwimp\nwind\nwing\nwink\nwipe\nwired\nwiry\nwise\nwish\nwispy\nwok\nwolf\nwomb\nwool\nwoozy\nword\nwork\nworry\nwound\nwoven\nwrath\nwreck\nwrist\nxerox\nyahoo\nyam\nyard\nyear\nyeast\nyelp\nyodel\nyoga\nyoyo\nyummy\nzebra\nzero\nzesty\nzippy\nzone\nzoom",
    "crumbs": [
      "Practice",
      "file_to_review"
    ]
  },
  {
    "objectID": "practice/Gaelle.html",
    "href": "practice/Gaelle.html",
    "title": "Gaelle",
    "section": "",
    "text": "I am a bit lost",
    "crumbs": [
      "Practice",
      "Gaelle"
    ]
  },
  {
    "objectID": "practice/Gaelle.html#section",
    "href": "practice/Gaelle.html#section",
    "title": "Gaelle",
    "section": "",
    "text": "I am a bit lost",
    "crumbs": [
      "Practice",
      "Gaelle"
    ]
  },
  {
    "objectID": "practice/another.html",
    "href": "practice/another.html",
    "title": "Another Page",
    "section": "",
    "text": "Here is another page!",
    "crumbs": [
      "Practice",
      "Another Page"
    ]
  },
  {
    "objectID": "practice/another.html#with-a-sub-section",
    "href": "practice/another.html#with-a-sub-section",
    "title": "Another Page",
    "section": "With a sub section",
    "text": "With a sub section\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nFirst ordered list item\nAnother item\nActual numbers don’t matter, just that it’s a number\n\nOrdered sub-list\n\nAnd another item.",
    "crumbs": [
      "Practice",
      "Another Page"
    ]
  },
  {
    "objectID": "practice/henry.html",
    "href": "practice/henry.html",
    "title": "Henry’s practice page",
    "section": "",
    "text": "Henry’s practice page",
    "crumbs": [
      "Practice",
      "Henry's practice page"
    ]
  },
  {
    "objectID": "practice/henry.html#a-sub-section",
    "href": "practice/henry.html#a-sub-section",
    "title": "Henry’s practice page",
    "section": "A sub section",
    "text": "A sub section\nHello world",
    "crumbs": [
      "Practice",
      "Henry's practice page"
    ]
  },
  {
    "objectID": "practice/henry.html#a-new-section-for-a-pull-request",
    "href": "practice/henry.html#a-new-section-for-a-pull-request",
    "title": "Henry’s practice page",
    "section": "A new section for a pull request",
    "text": "A new section for a pull request",
    "crumbs": [
      "Practice",
      "Henry's practice page"
    ]
  },
  {
    "objectID": "practice/ben.html",
    "href": "practice/ben.html",
    "title": "ben w",
    "section": "",
    "text": "Ben W’s page\n\ncreating\na\nlist",
    "crumbs": [
      "Practice",
      "ben w"
    ]
  },
  {
    "objectID": "practice/sakshi.html",
    "href": "practice/sakshi.html",
    "title": "Sakshi",
    "section": "",
    "text": "#Its an adventure!",
    "crumbs": [
      "Practice",
      "Sakshi"
    ]
  },
  {
    "objectID": "preparation/index.html",
    "href": "preparation/index.html",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "GitHub is a proprietary developer platform that allows developers to create, store, manage, and share their code. It uses Git to provide distributed version control and GitHub itself provides access control, bug tracking, software feature requests, task management, continuous integration, and wikis for every project. (source)\n\n\nAs part of this workshop we will be connecting and pushing some sample code to GitHub, therefore you’ll need to create a GitHub account.\n\nGo to https://github.com and click “Sign up” at the top-right of the window.\n\nNote that if this is new it should probably be with your government email\nSome people use a personal GitHub account, that is just fine! There are new single sign-on requirements so your IDIR must be linked to your account to be in the bcgov and bcgov-c GitHub organizations, which you can set up after creating your account.\n\nFollow the step-by-step instructions to create an account.\nVerify your email address with GitHub.\n\nOptional reading: Configuring your GitHub account\n\n\n\nYou will need to have any two-factor devices, and personal GitHub login and IDIR login ready.\n\nLog into GitHub with your personal login.\nFollow the instructions in the BC Developer Guide!"
  },
  {
    "objectID": "preparation/index.html#create-your-github-account",
    "href": "preparation/index.html#create-your-github-account",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "As part of this workshop we will be connecting and pushing some sample code to GitHub, therefore you’ll need to create a GitHub account.\n\nGo to https://github.com and click “Sign up” at the top-right of the window.\n\nNote that if this is new it should probably be with your government email\nSome people use a personal GitHub account, that is just fine! There are new single sign-on requirements so your IDIR must be linked to your account to be in the bcgov and bcgov-c GitHub organizations, which you can set up after creating your account.\n\nFollow the step-by-step instructions to create an account.\nVerify your email address with GitHub.\n\nOptional reading: Configuring your GitHub account"
  },
  {
    "objectID": "preparation/index.html#add-yourself-to-bcgovand-bcgov-c",
    "href": "preparation/index.html#add-yourself-to-bcgovand-bcgov-c",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "You will need to have any two-factor devices, and personal GitHub login and IDIR login ready.\n\nLog into GitHub with your personal login.\nFollow the instructions in the BC Developer Guide!"
  },
  {
    "objectID": "preparation/index.html#configure-git",
    "href": "preparation/index.html#configure-git",
    "title": "Preparation and installation instructions",
    "section": "Configure Git",
    "text": "Configure Git\n\nGit Set Up\nWhen we use Git on a new computer for the first time, we need to configure a few things. Below are a few examples of configurations we will set as we get started with Git:\n\nour name and email address\nand that we want to use these settings globally (i.e. for every project).\n\nOn a command line, Git commands are written as git verb options, where verb is what we actually want to do and options is additional optional information which may be needed for the verb.\n\n\nSet user.name & user.email\nIn this workshop, we’ll be working with GitHub, and it’s important to ensure that the name and email address you configure on your local computer matches the one associated with your GitHub account. For most participants, this will be your government email address.\nBelow is an example configuration that we will use to connect your local git instance with GitHub.\nFor Windows users, these will be typed into a Git Bash terminal (search for Git Bash from the search bar to open a new window). For Mac users, these will be typed into the Terminal.\n$ git config --global user.name \"your GitHub account name\" \n$ git config --global user.email \"your_email@gmail.com\"\nIf you are concerned about privacy, please review GitHub’s instructions for keeping your email address private.\n\n\nCheck Global Settings\nThe two commands we just ran only need to be run once. The flag --global tells Git to use the settings for every project on this computer.\nYou can check your settings at any time with:\n$ git config --list\nYou can change your configuration as many times as you want: use the same commands to update your name or email address.\n\n\nAccess Git Help and Manual\nIf you forget a git command, you can access a list of available commands by appending a -h. You can access the Git manual for a command by appending --help :\n$ git config -h\n$ git config --help\nWhile viewing the manual, you may see : near the cursor at the bottom of the screen. This is a prompt waiting for further commands such as Q, which you can use to exit the manual."
  },
  {
    "objectID": "01-github-collaboration-workflows.html",
    "href": "01-github-collaboration-workflows.html",
    "title": "GitHub Collaboration Workflows",
    "section": "",
    "text": "Learning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\n\n\n\nWe are going to use the repository https://github.com/dawnbcgov/aq-intro-to-github-shinyapps that hosts this website for practice today.\nGo ahead and make a copy of the repository with all the files for (or using git terminology “clone”) this website to your local machine.\n\n  \n    \n    \n      \n        \n          Find the URL or address of the repository you want to make a local copy of on GitHub (in this case https://github.com/dawnbcgov/aq-intro-to-github-shinyapps.git (how you clone via GitHub desktop) or git@github.com:dawnbcgov/aq-intro-to-github-shinyapps.git (which is how to clone via cli)) \n          If you are using GitHub Desktop, go to File &gt; Clone repository \n          Or, if you are using the git cli, use Git Bash and the command git clone  where the  is the address\n        \n      \n    \n  \n\n\n\n\n\n\n\nResources used\n\n\n\n\nCloning and forking repositories from GitHub Desktop\nGit Basics - Getting a Git Repository",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#welcome-setup-check-10-mins",
    "href": "01-github-collaboration-workflows.html#welcome-setup-check-10-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "",
    "text": "Learning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\n\n\n\nWe are going to use the repository https://github.com/dawnbcgov/aq-intro-to-github-shinyapps that hosts this website for practice today.\nGo ahead and make a copy of the repository with all the files for (or using git terminology “clone”) this website to your local machine.\n\n  \n    \n    \n      \n        \n          Find the URL or address of the repository you want to make a local copy of on GitHub (in this case https://github.com/dawnbcgov/aq-intro-to-github-shinyapps.git (how you clone via GitHub desktop) or git@github.com:dawnbcgov/aq-intro-to-github-shinyapps.git (which is how to clone via cli)) \n          If you are using GitHub Desktop, go to File &gt; Clone repository \n          Or, if you are using the git cli, use Git Bash and the command git clone  where the  is the address\n        \n      \n    \n  \n\n\n\n\n\n\n\nResources used\n\n\n\n\nCloning and forking repositories from GitHub Desktop\nGit Basics - Getting a Git Repository",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#refresher-on-key-concepts-with-version-control-10-mins",
    "href": "01-github-collaboration-workflows.html#refresher-on-key-concepts-with-version-control-10-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Refresher on key concepts with version control (10 mins)",
    "text": "Refresher on key concepts with version control (10 mins)\n\nKey concepts we want to review:\n\n\nVersion Control\nSequential changes:\n\nThe power of git and similar version control systems: different versions can be saved, conflicts resolved, and then merged together:\n\n\n\nRemote Code Hosting and GitHub\n\n\n\nBranches\n\n\n\n\n\n\n\n\nResources used\n\n\n\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; What is Version Control\nBC Stats: Introduction to Version Control with Git & GitHub &gt; Remote Code Hosting and GitHub\nGitHub: About Branches",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#tracking-changes-20-mins",
    "href": "01-github-collaboration-workflows.html#tracking-changes-20-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Tracking changes (20 mins)",
    "text": "Tracking changes (20 mins)\n\nActivity: Make a change to this site (commit and push)\n\nNow that we each have a copy of this site, we are going to make a change! (First a micro crash course on quarto and markdown)\nSo, now, on your computer, make a new page for this website in the practice area. Add whatever you want then save it. Next, you’ll need to commit that change and push (or publish / send it) so we all can see.\n\n  \n    \n      \n        Hint\n      \n    \n    \n      \n        \n          Open RStudio, VS Code or your preferred editor, markdown files are like text files so you could use notepad if you want\n          Create a new file in the practice folder, it should end in .qmd and needs to have the --- section at the top. (You could make a copy of one of the files that are there)\n          Make your edits and save\n          When you are ready, select the file you changed, commit it (you will need to add a message), and push it          \n        \n      \n    \n  \n\n\n\n\n\n\n\nResources used\n\n\n\n\nSoftware Carpentry: Version Control with Git (Episode: 4. Tracking changes)",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#collaboration-on-github-20-mins",
    "href": "01-github-collaboration-workflows.html#collaboration-on-github-20-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Collaboration on GitHub (20 mins)",
    "text": "Collaboration on GitHub (20 mins)\nWe’ve all been working from the main branch, but that can be risky for a many reasons.\nJust a couple: we might make a mistake while we’re working and if we just keep updating the authoritative copy we could miss it. second, two people might change the same file and then we need a process to resolve that conflict.\nGit and GitHub give us powerful collaboration tools we can use to manage all these processes!\n\nCreating pull requests (PR)\n\nActivity: Make a change to another page on a branch and change it back to the main site (pull request)\n\nLet’s make an edit to someone else’s page on a new branch and use the collaboration tools to review and merge those changes (and resolve conflicts!).\n\n  \n    \n      \n        Hint\n      \n    \n    \n      \n        \n          First you have to make a new branch give it a name that someone else is not likely to use, like your name\n          Open and edit an existing file in the practice folder\n          Make your edits and save\n          When you are ready, select the file you changed, commit it (you will need to add a message), and push it. There will be an extra step to set up the branch in the repository we are all using depending on your software          \n          Then go to GitHub.com and go to the pull request tab \n          Select your branch to \"compare\" with the main branch and then the button create pull request\n      \n      \n    \n  \n\n\n\nReviewing pull requests\nTo mitigate the risk of pushing directly to the main branch, some repositories have branch protection rules. These rules restrict merges and commits to specific branches unless specific criteria are made. One common criteria is that the pull request can only be merged to the main branch if it has been reviewed by another collaborator. Even without these rules, working on a development branch and asking a collaborator to review your pull request is good practice. When you create a pull request, you can use the GitHub pull request page to request/assign reviewers (right hand menu).\n\nActivity: Review a proposed change to the main site (pull request)\n\nAlthough this repo will not have branch protection rules applied, we can practice navigating the pull request review process on GitHub. Let’s review the practice branch we’ve created, pr_practice, together. Follow the instructions on the pull request itself. You can also walk through every step in the accordion box below.\n\n  \n    \n      \n        Hint\n      \n    \n    \n      \n        \n          First, navigate to the pull request tab of the GitHub repository.\n          Click on the PR you want to review. For this activity, it is the one named \"PR Review Practice\". Note that Issues and PRs are numbered in the same sequence.\n          On the PR's page, you can first start with the \"Conversation\" tab and read through the PR author's description of the changes. You can follow any conversation that might have already happened and also see a history of commits, all in chronological order. Read through the existing comments and add a hello of your own.\n          On the \"Commits\" tab, you can see just the commit history for the branch that is the subject of the pull request. Note that as the review and conversation progresses, further pushes to this branch will also update the pull request. That is, the pull request is for a *branch* to be pulled into another, not a specific commit.           \n          We can skip the \"Checks\" tab for this practice. For repos with Continuous Integration/Continuous Deployment (aka CI/CD), the history of the output of all automated checking and unit testing scripts will appear here. For workflows that use it, it can help the collaborators answer the question \"Does this code work?\"\n          The \"Files changed\" tab is where you will do most of the reviewing. For each file changed, you can see the \"diff\" of the original and proposed changes. For long files, only the changed lines are displayed, but you can expand the collapsed lines if you need to see the context. Here are some review activities to try:\n          \n             Notice that there is a review interface in the upper right (that will stay on top as you scroll) showing how many files you have reviewed and a green button to finalise your review. But first, let's just read through the file with the long word list.\n            Find duplicate lines and add a line-specific comment to flag as a duplicate. Just do one duplicate so others can flag too. You can do this by mousing over the space between the line number and the line of code. A blue + sign will appear. Click on it. You can type a comment (e.g. a correction of the spelling) and then add your comment with either \"add single comment\" or \"Start a review\" (choose this for this activity).\n            You can also add a comment to the entire file rather than a specific line. In the upper right area of the box for the cat facts file (or any file in the PR), there is a speech bubble icon to click on and add a comment. Write a comment and then \"Add review comment\".\n            When you are finished with each file, you can click the \"Viewed\" box to indicate that you have reviewed the file. It will close/collapse the container and you can move on to the next file. It's not necessary to check this box but it can help you keep track and indicate to others that you reviewed it without having to leave a comment that just says \"looks good\".\n            Repeat with any other files and then click \"Finish your review\". You can write one additional \"final review\" comment if you want. You also have three options with your review: just comment, approve, or indicate that more changes are needed before you can approve. Submit an \"approve\" review.\n            \n          \n      \n      \n    \n  \n\nThe GitHub review interface is very handy. All review comments go into the “Conversation” tab. When specific lines of codes are mentioned, a preview appears. Each comment can have its own thread to help discuss the details of the code. Conversations can be “resolved” when you have iterated enough to meet the requirements.\nIf you come back to the PR after having reviewed it and changes have been made, the interface remembers what you have seen and you can just review the new changes. Files that you have clicked as “Viewed” will be unclicked if there were changes. If you need to see the full context and history, those are available as well, in the tabs mentioned above. You can also use diff tools on GitHub or on your own software to make more comparisons.\nFinally, testing the code is not part of this activity, but if you wanted to run the code on the pull request locally, you would check out the branch of the PR and then you have a copy of the code being reviewed as well.\n\n\n\n\n\n\nResources used\n\n\n\n\nSoftware Carpentry: Version Control with Git (Episode: 8. Collaborating and Episode 9. Conflicts)",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html",
    "href": "preparation/markdown-reference.html",
    "title": "Markdown Reference",
    "section": "",
    "text": "RStudio: Help &gt; Markdown Quick Reference",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#headers",
    "href": "preparation/markdown-reference.html#headers",
    "title": "Markdown Reference",
    "section": "Headers",
    "text": "Headers\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#emphasis",
    "href": "preparation/markdown-reference.html#emphasis",
    "title": "Markdown Reference",
    "section": "Emphasis",
    "text": "Emphasis\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\nEmphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#lists",
    "href": "preparation/markdown-reference.html#lists",
    "title": "Markdown Reference",
    "section": "Lists",
    "text": "Lists\n(In this example, leading and trailing spaces are shown with with dots: ⋅)\n1. First ordered list item\n2. Another item\n⋅⋅* Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n⋅⋅1. Ordered sub-list\n4. And another item.\n\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n\nFirst ordered list item\nAnother item\n\n\nUnordered sub-list.\n\n\nActual numbers don’t matter, just that it’s a number\nOrdered sub-list\nAnd another item.\nYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).\nTo have a line break without a paragraph, you will need to use two trailing spaces.\nNote that this line is separate, but within the same paragraph.\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\nUnordered list can use asterisks\nOr minuses\nOr pluses",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#links",
    "href": "preparation/markdown-reference.html#links",
    "title": "Markdown Reference",
    "section": "Links",
    "text": "Links\nThere are two ways to create links.\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or &lt;http://www.example.com&gt; and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\nI’m an inline-style link\nI’m an inline-style link with title\nI’m a reference-style link\nI’m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#images",
    "href": "preparation/markdown-reference.html#images",
    "title": "Markdown Reference",
    "section": "Images",
    "text": "Images\nHere's our logo (hover to see the title text):\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style: \n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\nHere’s our logo (hover to see the title text):\nInline-style: \nReference-style:",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#code-and-syntax-highlighting",
    "href": "preparation/markdown-reference.html#code-and-syntax-highlighting",
    "title": "Markdown Reference",
    "section": "Code and Syntax Highlighting",
    "text": "Code and Syntax Highlighting\nCode blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page.\nInline `code` has `back-ticks around` it.\nInline code has back-ticks around it.\nBlocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting.\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n \n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n \n```\nNo language indicated, so no syntax highlighting. \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n```\n\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\ns = \"Python syntax highlighting\"\nprint s\nNo language indicated, so no syntax highlighting in Markdown Here (varies on Github). \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#footnotes",
    "href": "preparation/markdown-reference.html#footnotes",
    "title": "Markdown Reference",
    "section": "Footnotes",
    "text": "Footnotes\nFootnotes aren’t part of the core Markdown spec, but they supported by GFM.\nHere is a simple footnote[^1].\n\nA footnote can also have multiple lines[^2].  \n\nYou can also use words, to fit your writing style more closely[^note].\n\n[^1]: My reference.\n[^2]: Every new line should be prefixed with 2 spaces.  \n  This allows you to have a footnote with multiple lines.\n[^note]:\n    Named footnotes will still render with numbers instead of the text but allow easier identification and linking.  \n    This footnote also has been made with a different syntax using 4 spaces for new lines.\nRenders to:\n\n\n\nrendered footnotes",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#tables",
    "href": "preparation/markdown-reference.html#tables",
    "title": "Markdown Reference",
    "section": "Tables",
    "text": "Tables\nTables aren’t part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email – a task that would otherwise require copy-pasting from another application.\nColons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\nColons can be used to align columns.\n\n\n\nTables\nAre\nCool\n\n\n\n\ncol 3 is\nright-aligned\n$1600\n\n\ncol 2 is\ncentered\n$12\n\n\nzebra stripes\nare neat\n$1\n\n\n\nThere must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n\n\nMarkdown\nLess\nPretty\n\n\n\n\nStill\nrenders\nnicely\n\n\n1\n2\n3",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#blockquotes",
    "href": "preparation/markdown-reference.html#blockquotes",
    "title": "Markdown Reference",
    "section": "Blockquotes",
    "text": "Blockquotes\n&gt; Blockquotes are very handy in email to emulate reply text.\n&gt; This line is part of the same quote.\n\nQuote break.\n\n&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n\nBlockquotes are very handy in email to emulate reply text. This line is part of the same quote.\n\nQuote break.\n\nThis is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#inline-html",
    "href": "preparation/markdown-reference.html#inline-html",
    "title": "Markdown Reference",
    "section": "Inline HTML",
    "text": "Inline HTML\nYou can also use raw HTML in your Markdown, and it’ll mostly work pretty well.\n&lt;dl&gt;\n  &lt;dt&gt;Definition list&lt;/dt&gt;\n  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;\n\n  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n&lt;/dl&gt;\n\n\nDefinition list\n\n\nIs something people use sometimes.\n\n\nMarkdown in HTML\n\n\nDoes not work very well. Use HTML tags.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#horizontal-rule",
    "href": "preparation/markdown-reference.html#horizontal-rule",
    "title": "Markdown Reference",
    "section": "Horizontal Rule",
    "text": "Horizontal Rule\nThree or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\nThree or more…\n\nHyphens\n\nAsterisks\n\nUnderscores",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#line-breaks",
    "href": "preparation/markdown-reference.html#line-breaks",
    "title": "Markdown Reference",
    "section": "Line Breaks",
    "text": "Line Breaks\nMy basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend.\nHere are some things to try out:\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\nHere’s a line for us to start with.\nThis line is separated from the one above by two newlines, so it will be a separate paragraph.\nThis line is also begins a separate paragraph, but…\nThis line is only separated by a single newline, so it’s a separate line in the same paragraph.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "",
    "text": "Learning Objective: Set up GitHub account and ensure the tools we need are working on your machine\nInstructions: Preparation and installation instructions\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; BCGov GitHub Organization\nBC Developer Guide: BC Government organizations in GitHub\n\n\n\n\nLearning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\nInstructions: GitHub Collaboration Workflows\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; Remote Code Hosting and GitHub\nSoftware Carpentry: Version Control with Git (specific sections)\n\n\n\n\nMore soon\n\n\n\nMore soon",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "index.html#course-outline",
    "href": "index.html#course-outline",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "",
    "text": "Learning Objective: Set up GitHub account and ensure the tools we need are working on your machine\nInstructions: Preparation and installation instructions\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; BCGov GitHub Organization\nBC Developer Guide: BC Government organizations in GitHub\n\n\n\n\nLearning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\nInstructions: GitHub Collaboration Workflows\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; Remote Code Hosting and GitHub\nSoftware Carpentry: Version Control with Git (specific sections)\n\n\n\n\nMore soon\n\n\n\nMore soon",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis instruction material is sourced and adapted from two places:\n\nThe BCGov “Workshop: Introduction To Version Control With Git and GitHub” Copyright © Province of British Columbia and made available under the Creative Commons Attribution 4.0 International licence.\nhttps://github.com/bcgov/ds-intro-to-git\nThe Software Carpentry Foundation (now The Carpenties). All Software Carpentry, Data Carpentry, and Library Carpentry instructional material is Copyright © Software Carpentry and made available under the Creative Commons Attribution licence.\n\nDaisie Huang and Ivan Gonzalez (eds): Software Carpentry: Version Control with Git. Version 2016.06, June 2016, https://github.com/swcarpentry/git-novice, 10.5281/zenodo.57467.",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "practice/James.html",
    "href": "practice/James.html",
    "title": "james h",
    "section": "",
    "text": "James H page\n\ncreating\na\nlist",
    "crumbs": [
      "Practice",
      "james h"
    ]
  },
  {
    "objectID": "practice/dawn.html",
    "href": "practice/dawn.html",
    "title": "dawn",
    "section": "",
    "text": "My name is dawn\n\nhere\nis\na\nlist",
    "crumbs": [
      "Practice",
      "dawn"
    ]
  },
  {
    "objectID": "practice/jeremy.html",
    "href": "practice/jeremy.html",
    "title": "Jeremy’s practice page",
    "section": "",
    "text": "test page here",
    "crumbs": [
      "Practice",
      "Jeremy's practice page"
    ]
  },
  {
    "objectID": "practice/jeremy.html#a-sub-section",
    "href": "practice/jeremy.html#a-sub-section",
    "title": "Jeremy’s practice page",
    "section": "A sub section",
    "text": "A sub section\nHello world",
    "crumbs": [
      "Practice",
      "Jeremy's practice page"
    ]
  },
  {
    "objectID": "practice/jeremy.html#a-new-section-for-a-pull-request",
    "href": "practice/jeremy.html#a-new-section-for-a-pull-request",
    "title": "Jeremy’s practice page",
    "section": "A new section for a pull request",
    "text": "A new section for a pull request",
    "crumbs": [
      "Practice",
      "Jeremy's practice page"
    ]
  },
  {
    "objectID": "practice/sahil.html",
    "href": "practice/sahil.html",
    "title": "sahil practice github workshop 1",
    "section": "",
    "text": "test file adding a line for Henry-led workshop! :)\nWorkshop in the morning today, We can do this, is what I’ll say, Oh I was a little late to the meeting, missed saying “hey|”, I seem to be getting things, no way!\nAdding more data so I can read the workshop notes completely",
    "crumbs": [
      "Practice",
      "sahil practice github workshop 1"
    ]
  },
  {
    "objectID": "practice/index.html",
    "href": "practice/index.html",
    "title": "Practice Area",
    "section": "",
    "text": "This is the practice area we will use for making PRs, commits, and changes collaboratively.",
    "crumbs": [
      "Practice"
    ]
  },
  {
    "objectID": "practice/gail.html",
    "href": "practice/gail.html",
    "title": "gail r",
    "section": "",
    "text": "Gail R’s page\n\nupdating gail’s page\nmaking changes on a new branch instead of main",
    "crumbs": [
      "Practice",
      "gail r"
    ]
  },
  {
    "objectID": "practice/muntaseer.html",
    "href": "practice/muntaseer.html",
    "title": "muntaseer",
    "section": "",
    "text": "My name is muntaseer\n\nhere\nis\na\nlist",
    "crumbs": [
      "Practice",
      "muntaseer"
    ]
  }
]