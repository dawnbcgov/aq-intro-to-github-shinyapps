[
  {
    "objectID": "preparation/markdown-reference.html",
    "href": "preparation/markdown-reference.html",
    "title": "Markdown Reference",
    "section": "",
    "text": "RStudio: Help &gt; Markdown Quick Reference",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#headers",
    "href": "preparation/markdown-reference.html#headers",
    "title": "Markdown Reference",
    "section": "Headers",
    "text": "Headers\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#emphasis",
    "href": "preparation/markdown-reference.html#emphasis",
    "title": "Markdown Reference",
    "section": "Emphasis",
    "text": "Emphasis\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\nEmphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#lists",
    "href": "preparation/markdown-reference.html#lists",
    "title": "Markdown Reference",
    "section": "Lists",
    "text": "Lists\n(In this example, leading and trailing spaces are shown with with dots: ⋅)\n1. First ordered list item\n2. Another item\n⋅⋅* Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n⋅⋅1. Ordered sub-list\n4. And another item.\n\n⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅\n⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅\n⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n\nFirst ordered list item\nAnother item\n\n\nUnordered sub-list.\n\n\nActual numbers don’t matter, just that it’s a number\nOrdered sub-list\nAnd another item.\nYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).\nTo have a line break without a paragraph, you will need to use two trailing spaces.\nNote that this line is separate, but within the same paragraph.\n(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\nUnordered list can use asterisks\nOr minuses\nOr pluses",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#links",
    "href": "preparation/markdown-reference.html#links",
    "title": "Markdown Reference",
    "section": "Links",
    "text": "Links\nThere are two ways to create links.\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\nURLs and URLs in angle brackets will automatically get turned into links. \nhttp://www.example.com or &lt;http://www.example.com&gt; and sometimes \nexample.com (but not on Github, for example).\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\nI’m an inline-style link\nI’m an inline-style link with title\nI’m a reference-style link\nI’m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#images",
    "href": "preparation/markdown-reference.html#images",
    "title": "Markdown Reference",
    "section": "Images",
    "text": "Images\nHere's our logo (hover to see the title text):\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")\n\nReference-style: \n![alt text][logo]\n\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"\nHere’s our logo (hover to see the title text):\nInline-style: \nReference-style:",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#code-and-syntax-highlighting",
    "href": "preparation/markdown-reference.html#code-and-syntax-highlighting",
    "title": "Markdown Reference",
    "section": "Code and Syntax Highlighting",
    "text": "Code and Syntax Highlighting\nCode blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page.\nInline `code` has `back-ticks around` it.\nInline code has back-ticks around it.\nBlocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting.\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n \n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n \n```\nNo language indicated, so no syntax highlighting. \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.\n```\n\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\ns = \"Python syntax highlighting\"\nprint s\nNo language indicated, so no syntax highlighting in Markdown Here (varies on Github). \nBut let's throw in a &lt;b&gt;tag&lt;/b&gt;.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#footnotes",
    "href": "preparation/markdown-reference.html#footnotes",
    "title": "Markdown Reference",
    "section": "Footnotes",
    "text": "Footnotes\nFootnotes aren’t part of the core Markdown spec, but they supported by GFM.\nHere is a simple footnote[^1].\n\nA footnote can also have multiple lines[^2].  \n\nYou can also use words, to fit your writing style more closely[^note].\n\n[^1]: My reference.\n[^2]: Every new line should be prefixed with 2 spaces.  \n  This allows you to have a footnote with multiple lines.\n[^note]:\n    Named footnotes will still render with numbers instead of the text but allow easier identification and linking.  \n    This footnote also has been made with a different syntax using 4 spaces for new lines.\nRenders to:\n\n\n\nrendered footnotes",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#tables",
    "href": "preparation/markdown-reference.html#tables",
    "title": "Markdown Reference",
    "section": "Tables",
    "text": "Tables\nTables aren’t part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email – a task that would otherwise require copy-pasting from another application.\nColons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the \nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\nColons can be used to align columns.\n\n\n\nTables\nAre\nCool\n\n\n\n\ncol 3 is\nright-aligned\n$1600\n\n\ncol 2 is\ncentered\n$12\n\n\nzebra stripes\nare neat\n$1\n\n\n\nThere must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n\n\nMarkdown\nLess\nPretty\n\n\n\n\nStill\nrenders\nnicely\n\n\n1\n2\n3",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#blockquotes",
    "href": "preparation/markdown-reference.html#blockquotes",
    "title": "Markdown Reference",
    "section": "Blockquotes",
    "text": "Blockquotes\n&gt; Blockquotes are very handy in email to emulate reply text.\n&gt; This line is part of the same quote.\n\nQuote break.\n\n&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n\nBlockquotes are very handy in email to emulate reply text. This line is part of the same quote.\n\nQuote break.\n\nThis is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#inline-html",
    "href": "preparation/markdown-reference.html#inline-html",
    "title": "Markdown Reference",
    "section": "Inline HTML",
    "text": "Inline HTML\nYou can also use raw HTML in your Markdown, and it’ll mostly work pretty well.\n&lt;dl&gt;\n  &lt;dt&gt;Definition list&lt;/dt&gt;\n  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;\n\n  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;\n  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;\n&lt;/dl&gt;\n\n\nDefinition list\n\n\nIs something people use sometimes.\n\n\nMarkdown in HTML\n\n\nDoes not work very well. Use HTML tags.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#horizontal-rule",
    "href": "preparation/markdown-reference.html#horizontal-rule",
    "title": "Markdown Reference",
    "section": "Horizontal Rule",
    "text": "Horizontal Rule\nThree or more...\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\nThree or more…\n\nHyphens\n\nAsterisks\n\nUnderscores",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "preparation/markdown-reference.html#line-breaks",
    "href": "preparation/markdown-reference.html#line-breaks",
    "title": "Markdown Reference",
    "section": "Line Breaks",
    "text": "Line Breaks\nMy basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend.\nHere are some things to try out:\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\nHere’s a line for us to start with.\nThis line is separated from the one above by two newlines, so it will be a separate paragraph.\nThis line is also begins a separate paragraph, but…\nThis line is only separated by a single newline, so it’s a separate line in the same paragraph.",
    "crumbs": [
      "Resources",
      "Markdown Reference"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "",
    "text": "Learning Objective: Set up GitHub account and ensure the tools we need are working on your machine\nInstructions: Preparation and installation instructions\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; BCGov GitHub Organization\nBC Developer Guide: BC Government organizations in GitHub\n\n\n\n\nLearning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\nInstructions: GitHub Collaboration Workflows\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; Remote Code Hosting and GitHub\nSoftware Carpentry: Version Control with Git (specific sections)\n\n\n\n\nMore soon\n\n\n\nMore soon",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "index.html#course-outline",
    "href": "index.html#course-outline",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "",
    "text": "Learning Objective: Set up GitHub account and ensure the tools we need are working on your machine\nInstructions: Preparation and installation instructions\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; BCGov GitHub Organization\nBC Developer Guide: BC Government organizations in GitHub\n\n\n\n\nLearning Objective: Practice key steps for remote code hosting and collaborating in GitHub by using branches, opening pull requests (PRs), reviewing PRs, and merging changes\nInstructions: GitHub Collaboration Workflows\nExternal Resources:\n\nBC Stats: Introduction to Version Control with Git & GitHub &gt; Remote Code Hosting and GitHub\nSoftware Carpentry: Version Control with Git (specific sections)\n\n\n\n\nMore soon\n\n\n\nMore soon",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Workshop Series: GitHub, GitHub Actions (with Quarto) and ShinyApps.io",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis instruction material is sourced and adapted from two places:\n\nThe BCGov “Workshop: Introduction To Version Control With Git and GitHub” Copyright © Province of British Columbia and made available under the Creative Commons Attribution 4.0 International licence.\nhttps://github.com/bcgov/ds-intro-to-git\nThe Software Carpentry Foundation (now The Carpenties). All Software Carpentry, Data Carpentry, and Library Carpentry instructional material is Copyright © Software Carpentry and made available under the Creative Commons Attribution licence.\n\nDaisie Huang and Ivan Gonzalez (eds): Software Carpentry: Version Control with Git. Version 2016.06, June 2016, https://github.com/swcarpentry/git-novice, 10.5281/zenodo.57467.",
    "crumbs": [
      "Workshop Outline"
    ]
  },
  {
    "objectID": "practice/index.html",
    "href": "practice/index.html",
    "title": "Practice Area",
    "section": "",
    "text": "This is the practice area we will use for making PRs, commits, and changes collaboratively."
  },
  {
    "objectID": "preparation/index.html",
    "href": "preparation/index.html",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "GitHub is a proprietary developer platform that allows developers to create, store, manage, and share their code. It uses Git to provide distributed version control and GitHub itself provides access control, bug tracking, software feature requests, task management, continuous integration, and wikis for every project. (source)\n\n\nAs part of this workshop we will be connecting and pushing some sample code to GitHub, therefore you’ll need to create a GitHub account.\n\nGo to https://github.com and click “Sign up” at the top-right of the window.\n\nNote that if this is new it should probably be with your government email\nSome people use a personal GitHub account, that is just fine! There are new single sign-on requirements so your IDIR must be linked to your account to be in the bcgov and bcgov-c GitHub organizations, which you can set up after creating your account.\n\nFollow the step-by-step instructions to create an account.\nVerify your email address with GitHub.\n\nOptional reading: Configuring your GitHub account\n\n\n\nYou will need to have any two-factor devices, and personal GitHub login and IDIR login ready.\n\nLog into GitHub with your personal login.\nFollow the instructions in the BC Developer Guide!"
  },
  {
    "objectID": "preparation/index.html#create-your-github-account",
    "href": "preparation/index.html#create-your-github-account",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "As part of this workshop we will be connecting and pushing some sample code to GitHub, therefore you’ll need to create a GitHub account.\n\nGo to https://github.com and click “Sign up” at the top-right of the window.\n\nNote that if this is new it should probably be with your government email\nSome people use a personal GitHub account, that is just fine! There are new single sign-on requirements so your IDIR must be linked to your account to be in the bcgov and bcgov-c GitHub organizations, which you can set up after creating your account.\n\nFollow the step-by-step instructions to create an account.\nVerify your email address with GitHub.\n\nOptional reading: Configuring your GitHub account"
  },
  {
    "objectID": "preparation/index.html#add-yourself-to-bcgovand-bcgov-c",
    "href": "preparation/index.html#add-yourself-to-bcgovand-bcgov-c",
    "title": "Preparation and installation instructions",
    "section": "",
    "text": "You will need to have any two-factor devices, and personal GitHub login and IDIR login ready.\n\nLog into GitHub with your personal login.\nFollow the instructions in the BC Developer Guide!"
  },
  {
    "objectID": "preparation/index.html#configure-git",
    "href": "preparation/index.html#configure-git",
    "title": "Preparation and installation instructions",
    "section": "Configure Git",
    "text": "Configure Git\n\nGit Set Up\nWhen we use Git on a new computer for the first time, we need to configure a few things. Below are a few examples of configurations we will set as we get started with Git:\n\nour name and email address\nand that we want to use these settings globally (i.e. for every project).\n\nOn a command line, Git commands are written as git verb options, where verb is what we actually want to do and options is additional optional information which may be needed for the verb.\n\n\nSet user.name & user.email\nIn this workshop, we’ll be working with GitHub, and it’s important to ensure that the name and email address you configure on your local computer matches the one associated with your GitHub account. For most participants, this will be your government email address.\nBelow is an example configuration that we will use to connect your local git instance with GitHub.\nFor Windows users, these will be typed into a Git Bash terminal (search for Git Bash from the search bar to open a new window). For Mac users, these will be typed into the Terminal.\n$ git config --global user.name \"your GitHub account name\" \n$ git config --global user.email \"your_email@gmail.com\"\nIf you are concerned about privacy, please review GitHub’s instructions for keeping your email address private.\n\n\nCheck Global Settings\nThe two commands we just ran only need to be run once. The flag --global tells Git to use the settings for every project on this computer.\nYou can check your settings at any time with:\n$ git config --list\nYou can change your configuration as many times as you want: use the same commands to update your name or email address.\n\n\nAccess Git Help and Manual\nIf you forget a git command, you can access a list of available commands by appending a -h. You can access the Git manual for a command by appending --help :\n$ git config -h\n$ git config --help\nWhile viewing the manual, you may see : near the cursor at the bottom of the screen. This is a prompt waiting for further commands such as Q, which you can use to exit the manual."
  },
  {
    "objectID": "01-github-collaboration-workflows.html#refresher-on-key-concepts-with-version-control-10-mins",
    "href": "01-github-collaboration-workflows.html#refresher-on-key-concepts-with-version-control-10-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Refresher on key concepts with version control (10 mins)",
    "text": "Refresher on key concepts with version control (10 mins)\n\nActivity: Make your own copy of a repo (clone)",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#tracking-changes-20-mins",
    "href": "01-github-collaboration-workflows.html#tracking-changes-20-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Tracking changes (20 mins)",
    "text": "Tracking changes (20 mins)\n\nActivity: Make a change to this site (commit)",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  },
  {
    "objectID": "01-github-collaboration-workflows.html#collaboration-on-github-20-mins",
    "href": "01-github-collaboration-workflows.html#collaboration-on-github-20-mins",
    "title": "GitHub Collaboration Workflows",
    "section": "Collaboration on GitHub (20 mins)",
    "text": "Collaboration on GitHub (20 mins)\n\nActivity: Push your change back to the main site (push and pull request)",
    "crumbs": [
      "Workshop 1. GitHub Collaboration Workflows"
    ]
  }
]